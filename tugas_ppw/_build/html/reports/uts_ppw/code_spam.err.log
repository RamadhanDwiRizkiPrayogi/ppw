Traceback (most recent call last):
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\hp\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# 11) Export clustered results
out_csv = Path('datasets/clustered_spam.csv')
out_2 = Path('datasets/clustered_spam_k2.csv')
df[['id','Text','clean','cluster']].to_csv(out_csv, index=False)
df[['id','Text','clean','cluster_k2']].to_csv(out_2, index=False)
print('Saved')
------------------


[31m---------------------------------------------------------------------------[39m
[31mOSError[39m                                   Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[14][39m[32m, line 4[39m
[32m      2[39m out_csv = Path([33m'[39m[33mdatasets/clustered_spam.csv[39m[33m'[39m)
[32m      3[39m out_2 = Path([33m'[39m[33mdatasets/clustered_spam_k2.csv[39m[33m'[39m)
[32m----> [39m[32m4[39m [43mdf[49m[43m[[49m[43m[[49m[33;43m'[39;49m[33;43mid[39;49m[33;43m'[39;49m[43m,[49m[33;43m'[39;49m[33;43mText[39;49m[33;43m'[39;49m[43m,[49m[33;43m'[39;49m[33;43mclean[39;49m[33;43m'[39;49m[43m,[49m[33;43m'[39;49m[33;43mcluster[39;49m[33;43m'[39;49m[43m][49m[43m][49m[43m.[49m[43mto_csv[49m[43m([49m[43mout_csv[49m[43m,[49m[43m [49m[43mindex[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m)[49m
[32m      5[39m df[[[33m'[39m[33mid[39m[33m'[39m,[33m'[39m[33mText[39m[33m'[39m,[33m'[39m[33mclean[39m[33m'[39m,[33m'[39m[33mcluster_k2[39m[33m'[39m]].to_csv(out_2, index=[38;5;28;01mFalse[39;00m)
[32m      6[39m [38;5;28mprint[39m([33m'[39m[33mSaved[39m[33m'[39m)

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\util\_decorators.py:211[39m, in [36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    209[39m     [38;5;28;01melse[39;00m:
[32m    210[39m         kwargs[new_arg_name] = new_arg_value
[32m--> [39m[32m211[39m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\core\generic.py:3720[39m, in [36mNDFrame.to_csv[39m[34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)[39m
[32m   3709[39m df = [38;5;28mself[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m, ABCDataFrame) [38;5;28;01melse[39;00m [38;5;28mself[39m.to_frame()
[32m   3711[39m formatter = DataFrameFormatter(
[32m   3712[39m     frame=df,
[32m   3713[39m     header=header,
[32m   (...)[39m[32m   3717[39m     decimal=decimal,
[32m   3718[39m )
[32m-> [39m[32m3720[39m [38;5;28;01mreturn[39;00m [43mDataFrameRenderer[49m[43m([49m[43mformatter[49m[43m)[49m[43m.[49m[43mto_csv[49m[43m([49m
[32m   3721[39m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[32m   3722[39m [43m    [49m[43mlineterminator[49m[43m=[49m[43mlineterminator[49m[43m,[49m
[32m   3723[39m [43m    [49m[43msep[49m[43m=[49m[43msep[49m[43m,[49m
[32m   3724[39m [43m    [49m[43mencoding[49m[43m=[49m[43mencoding[49m[43m,[49m
[32m   3725[39m [43m    [49m[43merrors[49m[43m=[49m[43merrors[49m[43m,[49m
[32m   3726[39m [43m    [49m[43mcompression[49m[43m=[49m[43mcompression[49m[43m,[49m
[32m   3727[39m [43m    [49m[43mquoting[49m[43m=[49m[43mquoting[49m[43m,[49m
[32m   3728[39m [43m    [49m[43mcolumns[49m[43m=[49m[43mcolumns[49m[43m,[49m
[32m   3729[39m [43m    [49m[43mindex_label[49m[43m=[49m[43mindex_label[49m[43m,[49m
[32m   3730[39m [43m    [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   3731[39m [43m    [49m[43mchunksize[49m[43m=[49m[43mchunksize[49m[43m,[49m
[32m   3732[39m [43m    [49m[43mquotechar[49m[43m=[49m[43mquotechar[49m[43m,[49m
[32m   3733[39m [43m    [49m[43mdate_format[49m[43m=[49m[43mdate_format[49m[43m,[49m
[32m   3734[39m [43m    [49m[43mdoublequote[49m[43m=[49m[43mdoublequote[49m[43m,[49m
[32m   3735[39m [43m    [49m[43mescapechar[49m[43m=[49m[43mescapechar[49m[43m,[49m
[32m   3736[39m [43m    [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m   3737[39m [43m[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\util\_decorators.py:211[39m, in [36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    209[39m     [38;5;28;01melse[39;00m:
[32m    210[39m         kwargs[new_arg_name] = new_arg_value
[32m--> [39m[32m211[39m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\io\formats\format.py:1189[39m, in [36mDataFrameRenderer.to_csv[39m[34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)[39m
[32m   1168[39m     created_buffer = [38;5;28;01mFalse[39;00m
[32m   1170[39m csv_formatter = CSVFormatter(
[32m   1171[39m     path_or_buf=path_or_buf,
[32m   1172[39m     lineterminator=lineterminator,
[32m   (...)[39m[32m   1187[39m     formatter=[38;5;28mself[39m.fmt,
[32m   1188[39m )
[32m-> [39m[32m1189[39m [43mcsv_formatter[49m[43m.[49m[43msave[49m[43m([49m[43m)[49m
[32m   1191[39m [38;5;28;01mif[39;00m created_buffer:
[32m   1192[39m     [38;5;28;01massert[39;00m [38;5;28misinstance[39m(path_or_buf, StringIO)

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\io\formats\csvs.py:241[39m, in [36mCSVFormatter.save[39m[34m(self)[39m
[32m    237[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    238[39m [33;03mCreate the writer & save.[39;00m
[32m    239[39m [33;03m"""[39;00m
[32m    240[39m [38;5;66;03m# apply compression and byte/text conversion[39;00m
[32m--> [39m[32m241[39m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[32m    242[39m [43m    [49m[38;5;28;43mself[39;49m[43m.[49m[43mfilepath_or_buffer[49m[43m,[49m
[32m    243[39m [43m    [49m[38;5;28;43mself[39;49m[43m.[49m[43mmode[49m[43m,[49m
[32m    244[39m [43m    [49m[43mencoding[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mencoding[49m[43m,[49m
[32m    245[39m [43m    [49m[43merrors[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43merrors[49m[43m,[49m
[32m    246[39m [43m    [49m[43mcompression[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mcompression[49m[43m,[49m
[32m    247[39m [43m    [49m[43mstorage_options[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43mstorage_options[49m[43m,[49m
[32m    248[39m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handles:
[32m    249[39m 
[32m    250[39m     [38;5;66;03m# Note: self.encoding is irrelevant here[39;00m
[32m    251[39m     [38;5;28mself[39m.writer = csvlib.writer(
[32m    252[39m         handles.handle,
[32m    253[39m         lineterminator=[38;5;28mself[39m.lineterminator,
[32m   (...)[39m[32m    258[39m         quotechar=[38;5;28mself[39m.quotechar,
[32m    259[39m     )
[32m    261[39m     [38;5;28mself[39m._save()

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\io\common.py:734[39m, in [36mget_handle[39m[34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[39m
[32m    732[39m [38;5;66;03m# Only for write methods[39;00m
[32m    733[39m [38;5;28;01mif[39;00m [33m"[39m[33mr[39m[33m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode [38;5;129;01mand[39;00m is_path:
[32m--> [39m[32m734[39m     [43mcheck_parent_directory[49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43mhandle[49m[43m)[49m[43m)[49m
[32m    736[39m [38;5;28;01mif[39;00m compression:
[32m    737[39m     [38;5;28;01mif[39;00m compression != [33m"[39m[33mzstd[39m[33m"[39m:
[32m    738[39m         [38;5;66;03m# compression libraries do not like an explicit text-mode[39;00m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python311\Lib\site-packages\pandas\io\common.py:597[39m, in [36mcheck_parent_directory[39m[34m(path)[39m
[32m    595[39m parent = Path(path).parent
[32m    596[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m parent.is_dir():
[32m--> [39m[32m597[39m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([33mrf[39m[33m"[39m[33mCannot save file into a non-existent directory: [39m[33m'[39m[38;5;132;01m{[39;00mparent[38;5;132;01m}[39;00m[33m'[39m[33m"[39m)

[31mOSError[39m: Cannot save file into a non-existent directory: 'datasets'

